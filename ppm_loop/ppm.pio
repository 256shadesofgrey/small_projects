.program pulse_generator
.side_set 1
.wrap_target
    pull block       side 0
    mov x, osr       side 0
    set pins, 1      side 1
    nop side 1
    set pins, 0      side 0
pause:
    nop side 0
    jmp x--, pause   side 0

    set pins, 1      side 1
    nop side 1
    set pins, 0      side 0
.wrap

.program pulse_detector
.wrap_target
    mov y ~NULL         ; initialize counter with maximum value
    wait 0 pin 0        ; wait for negative edge (end of pulse, start of pause)
    wait 1 pin 0        ; wait for high signal level (pulse)
count_loop:
    jmp pin finish      ; check if high level appeared - pause ended
    jmp y-- count_loop  ; decrement counter and continue counting pause
    ; if y reached zero, the pause is too long
finish:
    mov ISR ~y          ; get pause duration (0xFFFFFFFF - y)
    push                ; put value into FIFO
.wrap                   ; return to measure the next pause
